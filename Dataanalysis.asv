% Dataanalysis 
% Sif Egelund Christensen
% Emma Victoria Vendel Lind
% 13/03/2023
%% Dataanalysis - changing the data to draw information from

% import and change the two coloumns with times' data type to "datetime"
% 

% removing coloumns
index=[22,21,19,17,16,12,9,8,6,4,2];
for i=1:length(index)
    Normaleuge2023(:,index(i)) = [];
end 
datetime.setDefaultFormats('default','HH:mm')

Normal = Normaleuge2023(:,:);

% Creating binary coloumn saying whether or not there can be cleaned on the stationed
binary = [];

for i=1:height(Normal(:,1))
    t = Normal{i,9};
  if t=='AB'||t=='AR'||t=='CPH'|| t=='ES'||t=='FA'||t=='FH'||t=='FLB'||t=='HG'||t=='HGL'||t=='KB'||t=='KH'||t=='KB'||t=='KK'||t=='LIH'||t=='NF'||t=='NÃ†'||t=='OD'||t=='SDB'||t=='STR'||t=='TE'
      binary(i)=1;
  else binary(i)=0;
  end
end

binary = array2table(binary','VariableNames',{'BinaryC'});
Normal=[Normal binary];

% removing the rows that we dont need 

in = [];
j = 1;

for i = 1:height(Normal(:,1))
    if Normal{i,2} == 'EB' || Normal{i,2} == 'EA' || Normal{i,2} == 'ME'
        in(j) = i;
        j = j+1;
    elseif Normal{i,10} == 0
        in(j) = i;
        j = j+1;
    end
end


for i = 0:length(in)-1
   Normal(in(length(in)-i),:) = [];
end 

%% The analysis

%% New calculation of the kilometers between cleanings

j = 1; 
vector = [];
kmCount = 0;

for i = 1:height(Normal(:,1))-1
    if Normal{i,1} == Normal{i+1,1}
        if Normal{i,5} == "TR" || Normal{i,5} == "OR"
        vector(j) = kmCount;
        j = j+1; 
        kmCount = Normal{i,10};
        elseif Normal{i,5} ~= "TR" || Normal{i,5} ~= "OR"
        kmCount = kmCount + Normal{i,10};
        end
    elseif Normal{i,1} ~= Normal{i+1,1}
        vector(j) = kmCount + Normal{i,10} ; 
        j = j+1; 
        kmCount = 0;
    end
end

max(nonzeros(vector))
min(nonzeros(vector))
mean(nonzeros(vector))

%% Number of cleanings in total
index = [];
antal = 0;
antalTR = 0;
antalOR = 0;
j = 1;

for i = 1: height(Normal{:,1})
    if Normal{i,5} == "TR" || Normal{i,5} == "OR"
        antal = antal+1;
        index(j) = i;
        j = j+1;
    end
end

for i = 1: height(Normal{:,1})
    if Normal{i,5} == "TR"
        antalTR = antalTR+1;
    elseif Normal{i,5} == "OR"
        antalOR = antalOR+1;
    end
end

%% The different litra types 

Litra1 = Normal(1:1803,:);
Litra2 = Normal(1804:2551,:);
Litra3 = Normal(2552:6758,:);
Litra4 = Normal(6759:7859,:);
Litra5 = Normal(7860:8922,:);
Litra6 = Normal(8923:11575,:);
Litra7 = Normal(11576:end,:);

%% max, min and mean on the different litratypes

j = 1; 
vector = [];
kmCount = 0;

Litra = Litra7;

for i = 1:height(Litra(:,1))-1
    if Litra{i,1} == Litra{i+1,1}
        if Litra{i,5} == "TR" || Litra{i,5} == "OR"
        vector(j) = kmCount;
        j = j+1; 
        kmCount = Litra{i,10};
        elseif Litra{i,5} ~= "TR" || Litra{i,5} ~= "OR"
        kmCount = kmCount + Litra{i,10};
        end
    elseif Litra{i,1} ~= Litra{i+1,1}
        vector(j) = kmCount + Litra{i,10} ; 
        j = j+1; 
        kmCount = 0;
    end
end

max(nonzeros(vector))
min(nonzeros(vector))
mean(nonzeros(vector))


%% Creating Or and Tr for each station 

for i = 1:height(Normal(:,1))
    if Normal{i,2} == 'ABS' || Normal{i,2} == 'B' || Normal{i,2} == 'BK'
        Or(i) = 47;
        Tr(i) = 175;

        elseif Normal{i,2} == 'ERF'
        Or(i) = 20;
        Tr(i) = 80;

        elseif Normal{i,2} == 'ETS'
        Or(i) = 15;
        Tr(i) = 104;

        elseif Normal{i,2} == 'ICA' 
        Or(i) = 16;
        Tr(i) = 72;

        elseif Normal{i,2} == 'MGA'
        Or(i) = 20;
        Tr(i) = 109;


    end
end

TRtable=array2table(Tr','VariableNames',{'Tr'});
Normal=[Normal TRtable];

ORtable=array2table(Or','VariableNames',{'Or'});
Normal=[Normal ORtable];

%% Calculatng the objective value with their soultion 
Z = 0; 

for i = 1:height(Normal(:,1))
    if Normal{i,5} == "TR" 
        Z = Z + Normal{i,13};
    elseif Normal{i,5} == "OR"
        Z = Z + Normal{i,14};
    end
end
